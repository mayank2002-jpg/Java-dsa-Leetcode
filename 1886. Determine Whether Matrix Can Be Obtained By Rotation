1886. Determine Whether Matrix Can Be Obtained By Rotation --> https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/

// Kafi sahi ha quetion parts mein divide karna ha then easily hoga //

class Solution {
    public boolean findRotation(int[][] mat, int[][] target) {
        for(int i=0; i<4; i++){
            mat = rotate(mat);
            if(isEqual(mat,target)){
                return true;
            }
        }
        return false;
    }
    public boolean isEqual(int[][] mat, int[][] target){
        boolean isEqual = true;
        for(int i=0; i<mat.length; i++){
            for(int j=0; j<mat.length; j++){
                if(mat[i][j] != target[i][j]){
                    isEqual = false;
                    break;
                }
            }
        }
        return isEqual;
    }
    public int[][] rotate(int[][] mat){
        for(int i=0; i<mat.length;i++){
            for(int j=0; j<i; j++){
                int temp = mat[i][j];
                mat[i][j] = mat[j][i];
                mat[j][i] = temp;
            }
        }
        for(int i=0; i<mat.length;i++){
            for(int j=0;j<mat.length/2;j++){
                int temp = mat[i][j];
                mat[i][j] = mat[i][mat.length-1-j];
                mat[i][mat.length-1-j] = temp;
            }
        }
        return mat;
    }
}
