33. Search in Rotated Sorted Array --> https://leetcode.com/problems/search-in-rotated-sorted-array/


class Solution {
    public int search(int[] nums, int target) {
        int low = 0, high = nums.length-1;
        while(low<=high){
            int mid = low +(high-low)/2;
            if(nums[mid] == target){
                return mid;
            }
            // Checking Left Half
            if(nums[low]<=nums[mid]){
                if(nums[low]<=target && nums[mid]>=target){
                    high = mid-1;
                } else{
                    low = mid+1;
                }
            }
            // checking right half
            else{
                if(nums[mid]<=target && target <= nums[high]){
                    low = mid+1;
                }
                else{
                    high = mid-1;
                }
            }
        }
        return -1;
    }
}
